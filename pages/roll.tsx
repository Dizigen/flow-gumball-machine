import Head from 'next/head'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import Spacer from '@/components/shared/spacer'
import { useState } from 'react'
import { useAsyncEffect } from 'usable-react'
import { getMagicInstance } from '@/libs/magic-sdk'
import Image from 'next/image';

const inter = Inter({ subsets: ['latin'] });

type PaymentModalProps ={
  showModal: Boolean;
  onCloseModal: () => void
}

const PaymentModal:React.FunctionComponent<PaymentModalProps> = (props) => {
  const { showModal, onCloseModal } = props;

  return (showModal ? 
    <div className={`${styles.modalWrapper} ${inter.className}`}>
      <div className={styles.modal}>
        <div>Giiiiveee meeee youurrrr monnneeeyyyyyy!!!!</div>
        <Spacer orientation="vertical" size={36}/>
        <button onClick={onCloseModal} style={{width: '200px', height: '32px'}}>Close</button>
      </div>
    </div>
    : <></>
  )
}

export default function Login() {
  const [userEmail, setUserEmail] = useState('');
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const [publicAddress, setPublicAddress] = useState('');
  const [showPaymentModal, setShowPaymentModal] = useState(false);

  useAsyncEffect(() => {
    const context = {
        hello: 'world'
    }
    console.log('context: ', context);
    return { 
        execute: async () => {
            const loggedIn = await getMagicInstance().user.isLoggedIn();
            setIsLoggedIn(loggedIn);
            if (loggedIn) {
                const { publicAddress: pubAddr } = await getMagicInstance().user.getMetadata();
                setPublicAddress(pubAddr || '');
            }
        }
     }
  }, [])

  const doLogin = async () => {
    await getMagicInstance().auth.loginWithEmailOTP({ email: userEmail });
    setIsLoggedIn(true);
    const { publicAddress: pubAddr } = await getMagicInstance().user.getMetadata();
    setPublicAddress(pubAddr || '')
  }

  return (
    <>
      <Head>
        <title>Flow Gumball Machine</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        {!isLoggedIn &&
          <>
            <h2 className={inter.className}>
              Enter Email to Login
            </h2>
            <Spacer orientation="vertical" size={12} />
            <input 
              className={`${styles.loginInput} ${inter.className}`} 
              type="text" 
              value={userEmail} 
              onChange={(e) => setUserEmail(e.target.value)} />
            <Spacer orientation="vertical" size={12} />
            <button style={{height: '36px', cursor: 'pointer'}} onClick={doLogin}>Login</button>
            <Spacer orientation="vertical" size={12} />
          </>
        }
      {isLoggedIn && 
        <div className={inter.className}>
          <div>Flow Public Address: { publicAddress }</div>
          <Spacer orientation="vertical" size={24} />
          <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>
            <Image src="/gumball-machine.png" alt="" width={480} height={480}/>
            <Spacer orientation="vertical" size={24} />
            <button 
              style={{height: '36px', cursor: 'pointer'}}
              onClick={() => setShowPaymentModal(true)}>Roll for $3</button>
          </div>
        </div>}
      </main>
      <PaymentModal showModal={showPaymentModal} onCloseModal={() => setShowPaymentModal(false)}/>
    </>
  )
}
